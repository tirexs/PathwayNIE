// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PathwayNIE.Models.Entities;

#nullable disable

namespace PathwayNIE.Migrations
{
    [DbContext(typeof(PathwayContext))]
    [Migration("20230426151221_NT_HZ")]
    partial class NT_HZ
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PathwayNIE.Models.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoreSkills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EducationInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FCs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageSkills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.CategoryTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CategoryTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Archetype")
                        .HasColumnType("double precision");

                    b.Property<double>("Engagement")
                        .HasColumnType("double precision");

                    b.Property<double>("IntelligenceValue")
                        .HasColumnType("double precision");

                    b.Property<double>("MotivationValue")
                        .HasColumnType("double precision");

                    b.Property<double>("PsychologyProfile")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Characteristic");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.ComplexityTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ComplexityTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.EmployerCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmployerCards");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.MakedTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserLoginId");

                    b.ToTable("MakedTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacteristicId")
                        .HasColumnType("integer");

                    b.Property<int>("TaskIdId")
                        .HasColumnType("integer");

                    b.Property<int>("UserIdId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("TaskIdId");

                    b.HasIndex("UserIdId");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.SolvedTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("integer");

                    b.Property<int?>("CharacteristicId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Solution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserIdId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("UserIdId");

                    b.ToTable("SolvedTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.TaskAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("MakedTaskId")
                        .HasColumnType("integer");

                    b.Property<int?>("SolvedTaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MakedTaskId");

                    b.HasIndex("SolvedTaskId");

                    b.ToTable("TaskAttachment");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacteristicSetId")
                        .HasColumnType("integer");

                    b.Property<int?>("CvId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EmployerCardId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicSetId");

                    b.HasIndex("CvId");

                    b.HasIndex("EmployerCardId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EmployerCardId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCardId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Achievement", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.CV", null)
                        .WithMany("AchievementsList")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.MakedTask", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Score", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.Characteristic", null)
                        .WithMany("Scores")
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("PathwayNIE.Models.Entities.SolvedTask", "TaskId")
                        .WithMany()
                        .HasForeignKey("TaskIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PathwayNIE.Models.Entities.UserLogin", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.SolvedTask", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.CV", null)
                        .WithMany("SolvedTasks")
                        .HasForeignKey("CVId");

                    b.HasOne("PathwayNIE.Models.Entities.Characteristic", null)
                        .WithMany("SolvedTasks")
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("PathwayNIE.Models.Entities.UserLogin", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.TaskAttachment", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.MakedTask", null)
                        .WithMany("TaskAttachments")
                        .HasForeignKey("MakedTaskId");

                    b.HasOne("PathwayNIE.Models.Entities.SolvedTask", null)
                        .WithMany("TaskAttachments")
                        .HasForeignKey("SolvedTaskId");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.UserLogin", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.Characteristic", "CharacteristicSet")
                        .WithMany()
                        .HasForeignKey("CharacteristicSetId");

                    b.HasOne("PathwayNIE.Models.Entities.CV", "Cv")
                        .WithMany()
                        .HasForeignKey("CvId");

                    b.HasOne("PathwayNIE.Models.Entities.EmployerCard", "EmployerCard")
                        .WithMany()
                        .HasForeignKey("EmployerCardId");

                    b.HasOne("PathwayNIE.Models.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId");

                    b.Navigation("CharacteristicSet");

                    b.Navigation("Cv");

                    b.Navigation("EmployerCard");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Vacancy", b =>
                {
                    b.HasOne("PathwayNIE.Models.Entities.EmployerCard", null)
                        .WithMany("VacanciesList")
                        .HasForeignKey("EmployerCardId");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.CV", b =>
                {
                    b.Navigation("AchievementsList");

                    b.Navigation("SolvedTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Characteristic", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("SolvedTasks");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.EmployerCard", b =>
                {
                    b.Navigation("VacanciesList");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.MakedTask", b =>
                {
                    b.Navigation("TaskAttachments");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("PathwayNIE.Models.Entities.SolvedTask", b =>
                {
                    b.Navigation("TaskAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
